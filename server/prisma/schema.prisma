// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  super
  admin
  auditor
  analista
}

model User {
  id       String @unique @default(cuid())
  name     String
  username String @unique
  email    String @unique
  password String
  roles    Role[]
  avatar   String @default("default_avatar")

  emailVerifiedAt DateTime?

  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  company   Company?  @relation(fields: [companyId], references: [id])
  companyId String?
  Request   Request[]

  @@map("users")
}

model Company {
  id          String @unique @default(cuid())
  name        String
  email       String @unique
  website     String
  description String
  emplooyes   User[]

  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("companies")
}

model Session {
  id        String   @unique @default(cuid())
  username  String
  userId    String
  companyId String
  createdAt DateTime @default(now())
  deviceIP  String

  Request Request[]

  @@map("sessions")
}

model Request {
  id         String   @unique @default(cuid())
  userId     String
  userName   String
  userEmail  String
  deviceIP   String
  method     String
  statusCode Int
  endpoint   String
  sessionId  String
  companyId  String
  createdAt  DateTime @default(now())

  session Session @relation(fields: [sessionId], references: [id])
  user    User    @relation(fields: [userId], references: [id])

  @@map("requests")
}
